How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can undo any changes and get a history of all the changes thus making it easier to debug.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is an intermediate area where file are ready to be committed. You can choose which files you want to be added in one commit. so it makes the commit process more flexiable.

How can you use the staging area to make sure you have one commit per logical change?

We can add only one file in stating area thus making sure that only one logical change comamitted per commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches let you experiment with the code.

How do the diagrams help you visualize the branch structure?

Diagrames let you see the branches, their heads and the commits associated with them. It also lists the unreachable commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result would have changes from both master and branch. The diagram reprensentation give us parents of each commit, thus providing us logical history of a branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Git automatic commit is easier for the user but you don't know the consequence while manaul commit is cumbersome but then you know what you're committing.


